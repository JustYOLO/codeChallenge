#include <iostream>
using namespace std;

/*
반례:
5
1 8 5 7 9

출력:
8 -1 7 9 -1

정답:
8 9 7 9 -1

8을 검사할때 5와 7만 검사함.
*/

/*
배열의 뒤에서 부터 검사해서 (맨 오른쪽 원소의 오큰수는 무조건 -1)
앞의 원소를 차례로 검사.
if 현재 원소 < 앞 원소 -> 현재 원소의 오큰수는 앞 원소
elif 현재 원소 < 앞 원소의 오큰수 -> 현재 원소의 오큰수는 앞 원소의 오큰수
else (현재 원소 > 앞 원소 && 현재 원소 > 앞 원소의 오큰수)
    현재 원소의 오큰수는 -1

*/

int main()
{
    int n;
    cin >> n; // 수열의 길이를 저장
    int arr[n]; // 입력된 수열을 저장하는 배열
    int ans[n]; // 답을 저장하는 배열
    for(int i = 0; i < n; i++)
        cin >> arr[i]; // 배열에 수열을 입력
    ans[n - 1] = - 1; // 수열의 마지막 원소의 오큰수는 무조건 -1.
    for(int i = n - 2; i >= 0; i--) // 배열의 뒤에서부터 검사
    {
        if(arr[i] < arr[i + 1]) // 앞 원소가 현재 원소보다 크면
            ans[i] = arr[i + 1]; // 앞 원소가 오큰수
        else if(arr[i] < ans[i + 1]) // 앞 원소의 오큰수가 크면
            ans[i] = ans[i + 1]; // 앞 원소의 오큰수가 오큰수
        else // 위 2조건에 만족하지 않으면
            ans[i] = -1; // 오큰수는 -1
    }
    for(int i: ans)
        cout << i << ' ';

    return 0;
}